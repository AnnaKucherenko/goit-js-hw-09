{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","delayEl","onFormSubmit","evt","preventDefault","formElements","currentTarget","elements","formData","valueDelay","delay","value","valueStep","step","valueAmount","amount","console","log","position","i","Number","createPromise","then","catch","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAUF,SAASC,cAAc,uBAGvC,SAASE,EAAaC,GACpBA,EAAIC,iBACEC,MAAAA,EAAeF,EAAIG,cAAcC,SAMjCC,EAAW,CACXC,WALaJ,EAAaK,MAAMC,MAMhCC,UALYP,EAAaQ,KAAKF,MAM9BG,YALcT,EAAaU,OAAOJ,OAOxCK,QAAQC,IAAIT,GACZQ,QAAQC,IAAIT,EAASM,aACjBI,IAAAA,EAAW,EACXR,EAAQ,EACP,IAAA,IAAIS,EAAI,EAAGA,GAAKX,EAASM,YAAaK,GAAK,EAE7B,KADjBD,GAAY,KAEVR,GAASU,OAAOZ,EAASC,aAEvBS,GAAY,IACdR,GAASU,OAAOZ,EAASI,YAE3BI,QAAQC,IAAIC,EAAUR,GACtBW,EAAcH,EAAUR,GACvBY,KAAK,EAAGJ,SAAAA,EAAUR,MAAAA,MACjBM,QAAQC,2BAA2BC,QAAeR,SAEnDa,MAAM,EAAGL,SAAAA,EAAUR,MAAAA,MAClBM,QAAQC,0BAA0BC,QAAeR,SAMvD,SAASW,EAAcH,EAAUR,GACtB,OAAA,IAAIc,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GACtCC,WAAW,KACLH,EACFF,IAEAC,KAEDhB,KAhDTZ,EAAKiC,iBAAiB,SAAU7B","file":"03-promises.4344b881.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt){\n  evt.preventDefault();\n  const formElements = evt.currentTarget.elements;\n\n  const valueDelay = formElements.delay.value;\n  const valueStep = formElements.step.value;\n  const valueAmount = formElements.amount.value;\n\n  const formData = {\n        valueDelay,\n        valueStep,\n        valueAmount,\n  }\n  console.log(formData);\n  console.log(formData.valueAmount);\n  let position = 0;\n  let delay = 0;\n  for (let i = 1; i <= formData.valueAmount; i += 1) {\n    position += 1;\n    if (position === 1) {\n      delay += Number(formData.valueDelay);\n    }\n    if (position >= 2) {\n      delay += Number(formData.valueStep);\n    }\n    console.log(position, delay);\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve()\n        } else {\n          reject();\n        }\n      }, delay);\n    })\n   \n}\n\n"]}